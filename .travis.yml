sudo: required

language: cpp

compiler:
  - gcc

env:
  ### Ubuntu 14.04
  - dist: ubuntu
    distver: 14.04
    init: /sbin/init
    run_opts: ""
    qtver: 55
    qtenv: "/opt/qt55/bin/qt55-env.sh"
    qtpkg: "qt55base qt55quickcontrols qt55svg"
    qtppa: "ppa:beineri/opt-qt551-trusty"
    deploy: false
  - dist: ubuntu
    distver: 14.04
    init: /sbin/init
    run_opts: ""
    qtver: 56
    qtenv: "/opt/qt56/bin/qt56-env.sh"
    qtpkg: "qt56base qt56quickcontrols qt56quickcontrols2 qt56svg"
    qtppa: "ppa:beineri/opt-qt56-trusty"
    deploy: true
    deployscript: "build/deploy.ubuntu.sh -qt"
  ### Ubuntu 16.04
  - dist: ubuntu
    distver: 16.04
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    deploy: true
    deployscript: "build/deploy.ubuntu.sh"

services:
  - docker

before_install:
  - docker pull ${dist}:${distver}
  - export CONTAINER=$(docker run --detach --volume="${PWD}":/build:rw ${run_opts} ${dist}:${distver} ${init})
  - export DOCKER="docker exec --tty ${CONTAINER} env TERM=xterm"
  - if [ "${dist}" = "ubuntu" ]; then
      if [ -n "${qtppa}" ]; then
        $DOCKER apt-get install -y software-properties-common;
        $DOCKER add-apt-repository -y ${qtppa};
      fi;
      $DOCKER apt-get update;
      if [ -n "${qtpkg}" ]; then
        $DOCKER apt-get install -y ${qtpkg};
      fi;
      $DOCKER apt-get install -y build-essential;
    fi

install:
  - if [ -n "${qtenv}" ]; then
      $DOCKER source ${qtenv};
    fi

script:
  - SCRIPT="cd /build;
            cd qtredmine;
            qmake -r;
            make -j8;
            cd ..;
            qmake -r;
            make -j8;"
  - $DOCKER $SCRIPT

before_deploy:
  - test $TRAVIS_TEST_RESULT = 0
    && test ${deploy} = true
    && $DOCKER DEPLOYFILE=$(${deployscript})

deploy:
  provider: releases
  api_key:
    secure: F3wBYR8oHwrLEJWwH6eQbTjhrNFCdklUQhjfq4wzixZO3bm5PTR/K3wvxaINmhsSoEdYHnSwzyVC3kWzcKWQX/3msCV4VyLvo1SULoz3RA2f4iY63Kbo0KzKiT+2rmOuGNHDDXCvIVKIhD81H5hR5YYhTPF7aBGfxvpb1Z2l9zfASP7fd6oZhdxolNfT3OS03AIB1on6pLgtv/aaizh5vAlVn32OwyFiJ5iOo+owFvYgImj082YTN025tVUh9KMjWD5naLgQ5ltflcWnIndjOwnasHQesmSKmCU5TBB7gAjpaRt0zKNdgDZ2RS8UFmaV5BIzF6TgP3I/IsVET5Fqqjil8PUSJZrGm/fbL+8yp9tpQ5chQcTV/ssYoQPZ0I2asZjuV6ypgSCIVuCdzcUewZgkLJglfKKTf1WqxKsjleaTZu9HpCyZ+XYp5L2Y+twsFZGgzYZoa43+/GtinNabNG75rIq0mc3cnNM/BQRvyUeAf9JUGeauQhTjJloiSKs3wl3VVYtvCiggWmKEjPYDNqgDLMaw10WMLt55f+i1VwzcBtRyZOkBC0/YVKLrM21JGOgbgEBtTam5G9+0Ysb6bwymTTD02N6tXjLFS9om2UyN1LzGzW+Sy0PW4L8RhoafwZEVTMDwxZh6Noo8JTZAN/XmOPM7cGfavVZchn2CWZc=
  file: ${DEPLOYFILE}
  skip_cleanup: true
  on:
    repo: fathomssen/redtimer
    condition: ${deploy} = true
    tags: true
