sudo: required
dist: trusty

env:
  global:
  matrix:
    ### Ubuntu 14.04 x86_64, Qt 5.5 - DO NOT DEPLOY
    - dist: ubuntu
      distver: 14.04
      init: /sbin/init
      qtver: 55
      qtenv: /opt/qt55/bin/qt55-env.sh
      qtpkg: "'qt55base qt55quickcontrols qt55svg mesa-common-dev libgl1-mesa-dev'"
      qtppa: ppa:beineri/opt-qt551-trusty
    ### Ubuntu 14.04 x86_64, Qt 5.6 - DEPLOY
    - dist: ubuntu
      distver: 14.04
      init: /sbin/init
      qtver: 56
      qtenv: /opt/qt56/bin/qt56-env.sh
      qtpkg: "'qt56base qt56quickcontrols qt56quickcontrols2 qt56svg mesa-common-dev libgl1-mesa-dev'"
      qtppa: ppa:beineri/opt-qt56-trusty
      deployscript: "'build/deploy.ubuntu.sh -qt'"
    ### Ubuntu 16.04 x86_64, Qt 5.5 - DEPLOY
    - dist: ubuntu
      distver: 16.04
      init: /sbin/init
      qtpkg: "'qtbase5-dev qtdeclarative5-dev libqt5svg5-dev'"
      qmakeopt: "-qt5"
      deployscript: build/deploy.ubuntu.sh

services:
  - docker

before_install:
  - docker pull ${dist}:${distver}
  - export CONTAINER=$(docker run --detach --volume="${PWD}":/build:rw ${dist}:${distver} ${init})
  - export DOCKER="docker exec --tty ${CONTAINER} env TERM=xterm"
  - if [ "${dist}" = "ubuntu" ]; then
      $DOCKER apt-get update;
      $DOCKER apt-get install -y pbuilder debootstrap devscripts;
      if [ -n "${qtppa}" ]; then
        $DOCKER apt-get update;
        $DOCKER apt-get install -y software-properties-common;
        $DOCKER add-apt-repository -y ${qtppa};
      fi;
      $DOCKER apt-get update;
      if [ -n "${qtpkg}" ]; then
        $DOCKER apt-get install -y ${qtpkg};
      fi;
      $DOCKER apt-get install -y build-essential lsb-release;
    fi

script:
  - export USER_ID=$(id -u)
  - export GROUP_ID=$(id -g)
  - if [ -n "${qtenv}" ]; then
      export SCRIPT="source ${qtenv};";
    fi
  - export SCRIPT="$SCRIPT
      cd /build;
      cd qtredmine;
      qmake ${qmakeopt} -r;
      make -j2;
      cd ..;
      qmake ${qmakeopt} -r;
      make -j2;
      chown -R $USER_ID:$GROUP_ID ."
  - $DOCKER bash -c "$SCRIPT"

before_deploy:
  - test $TRAVIS_TEST_RESULT = 0
  - test "${deployscript}"
  - $DOCKER bash -c "cd /build; ${deployscript}; chown -R $USER_ID:$GROUP_ID ." > .deployfile
  - export DEPLOYFILE=$(cat .deployfile | tr -d '\r\n')

deploy:
  provider: releases
  api_key:
    secure: F3wBYR8oHwrLEJWwH6eQbTjhrNFCdklUQhjfq4wzixZO3bm5PTR/K3wvxaINmhsSoEdYHnSwzyVC3kWzcKWQX/3msCV4VyLvo1SULoz3RA2f4iY63Kbo0KzKiT+2rmOuGNHDDXCvIVKIhD81H5hR5YYhTPF7aBGfxvpb1Z2l9zfASP7fd6oZhdxolNfT3OS03AIB1on6pLgtv/aaizh5vAlVn32OwyFiJ5iOo+owFvYgImj082YTN025tVUh9KMjWD5naLgQ5ltflcWnIndjOwnasHQesmSKmCU5TBB7gAjpaRt0zKNdgDZ2RS8UFmaV5BIzF6TgP3I/IsVET5Fqqjil8PUSJZrGm/fbL+8yp9tpQ5chQcTV/ssYoQPZ0I2asZjuV6ypgSCIVuCdzcUewZgkLJglfKKTf1WqxKsjleaTZu9HpCyZ+XYp5L2Y+twsFZGgzYZoa43+/GtinNabNG75rIq0mc3cnNM/BQRvyUeAf9JUGeauQhTjJloiSKs3wl3VVYtvCiggWmKEjPYDNqgDLMaw10WMLt55f+i1VwzcBtRyZOkBC0/YVKLrM21JGOgbgEBtTam5G9+0Ysb6bwymTTD02N6tXjLFS9om2UyN1LzGzW+Sy0PW4L8RhoafwZEVTMDwxZh6Noo8JTZAN/XmOPM7cGfavVZchn2CWZc=
  file_glob: true
  file: ${DEPLOYFILE}
  skip_cleanup: true
  on:
    repo: fathomssen/redtimer
    condition: -n "${deployscript}"
    tags: true
