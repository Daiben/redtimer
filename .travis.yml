language: cpp
compiler: clang

matrix:
  exclude:
    # Workaround to prevent building in an empty environment
    - compiler: clang
  include:
    ####################### Linux #######################
    - os: linux
      dist: trusty
      sudo: required
      env:
        - qtenv: /opt/qt57/bin/qt57-env.sh
        - qtpkg: "'qt57base qt57quickcontrols qt57quickcontrols2 qt57svg qt57x11extras mesa-common-dev libgl1-mesa-dev'"
        - qtppa: ppa:beineri/opt-qt57-trusty
    ####################### macOS #######################
    ###
    ### OS X 10.10
    ###
    - os: osx
      osx_image: xcode7.1
      env:
        - dist: "osx"
        - distver: "10.10"
        - distname: "yosemite"
    ###
    ### OS X 10.11
    ###
    - os: osx
      osx_image: xcode7.3
      env:
        - dist: "osx"
        - distver: "10.11"
        - distname: "el-capitan"
    ###
    ### macOS 10.12
    ###
    - os: osx
      osx_image: xcode8
      env:
        - dist: "macos"
        - distver: "10.12"
        - distname: "sierra"

services:
  - docker

before_install:
  ### Create aliases for checking variables
  - function run() {
      if [ "$1" = "false" ]; then
        return 0;
      fi;
      shift;
      "$@";
    }
  - export isLinux=$( [[ "$TRAVIS_OS_NAME" == "linux" ]] && echo true || echo false )
  - export isOsX=$( [[ "$TRAVIS_OS_NAME" == "osx" ]] && echo true || echo false )
  - export isMacOs=$( [[ "$isOsX" == "true" && "${distver}" > "10.11" ]] && echo true || echo false )
  ### Linux
  - run $isLinux sudo add-apt-repository -y ${qtppa}
  - run $isLinux sudo apt-get update
  ### OS X
  - run $isOsX brew update

install:
  ### Linux
  # Install dependencies
  - run $isLinux sudo apt-get install -y --force-yes ${qtpkg}
  ### OS X
  ### Install Qt5
  - run $isOsX brew install qt5
  - run $isOsX brew linkapps qt5
  - run $isOsX brew link --force qt5

script:
  - run $isLinux source ${qtenv}
  - qmake -r
  - make

after_success:
  ### The following commands have to define a $DEPLOYFILE
  # Linux
  - run $isLinux export PREFIX=redtimer-${TRAVIS_TAG}-linux-x86_64
  - run $isLinux sudo apt-get install -y --force-yes ruby-dev build-essential rpm
  - run $isLinux git clone https://github.com/jordansissel/fpm.git
  - run $isLinux cd fpm
  - run $isLinux bundle install
  - run $isLinux make
  - run $isLinux sudo make install
  - run $isLinux export VERSION=${TRAVIS_TAG#v}
  - run $isLinux .travis/deploy.linux.sh $PREFIX $VERSION
  # OS X
  - run $isOsX export PREFIX=redtimer-${TRAVIS_TAG}-${dist}-${distver}-${distname}
  - run $isOsX .travis/deploy.osx.sh $PREFIX
  # Both
  - export DEPLOYFILE=$PREFIX.*

deploy:
  provider: releases
  api_key:
    secure: F3wBYR8oHwrLEJWwH6eQbTjhrNFCdklUQhjfq4wzixZO3bm5PTR/K3wvxaINmhsSoEdYHnSwzyVC3kWzcKWQX/3msCV4VyLvo1SULoz3RA2f4iY63Kbo0KzKiT+2rmOuGNHDDXCvIVKIhD81H5hR5YYhTPF7aBGfxvpb1Z2l9zfASP7fd6oZhdxolNfT3OS03AIB1on6pLgtv/aaizh5vAlVn32OwyFiJ5iOo+owFvYgImj082YTN025tVUh9KMjWD5naLgQ5ltflcWnIndjOwnasHQesmSKmCU5TBB7gAjpaRt0zKNdgDZ2RS8UFmaV5BIzF6TgP3I/IsVET5Fqqjil8PUSJZrGm/fbL+8yp9tpQ5chQcTV/ssYoQPZ0I2asZjuV6ypgSCIVuCdzcUewZgkLJglfKKTf1WqxKsjleaTZu9HpCyZ+XYp5L2Y+twsFZGgzYZoa43+/GtinNabNG75rIq0mc3cnNM/BQRvyUeAf9JUGeauQhTjJloiSKs3wl3VVYtvCiggWmKEjPYDNqgDLMaw10WMLt55f+i1VwzcBtRyZOkBC0/YVKLrM21JGOgbgEBtTam5G9+0Ysb6bwymTTD02N6tXjLFS9om2UyN1LzGzW+Sy0PW4L8RhoafwZEVTMDwxZh6Noo8JTZAN/XmOPM7cGfavVZchn2CWZc=
  file_glob: true
  file: ${DEPLOYFILE}
  skip_cleanup: true
  on:
    repo: fathomssen/redtimer
    tags: true
