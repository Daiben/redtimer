version: '{branch}-{build}'

install:
  - cd %APPVEYOR_BUILD_FOLDER%
  - git submodule update --init
  - set QTDIR=C:\Qt\5.8\mingw53_32
  - '%QTDIR%\bin\qtenv2.bat'

build_script:
  - set VERSION=%APPVEYOR_REPO_BRANCH%-%APPVEYOR_BUILD_NUMBER%
  - if defined APPVEYOR_REPO_TAG_NAME set VERSION=%APPVEYOR_REPO_TAG_NAME%
  - set DIST=redtimer-%VERSION%-win32
  - set DEPLOYFILE=%DIST%.zip
  - echo %VERSION%
  - echo %DEPLOYFILE%
  - echo %DIST%
  - cd %APPVEYOR_BUILD_FOLDER%
  - qmake -r
  - mingw32-make

after_build:
  # Variables
  - set BUILD=%APPVEYOR_BUILD_FOLDER%
  - echo %BUILD%
  # Create directories
  - mkdir %DIST%
  - mkdir %DIST%\iconengines
  - mkdir %DIST%\imageformats
  - mkdir %DIST%\platforms
  - mkdir %DIST%\QtQuick
  - mkdir %DIST%\QtQuick.2
  # Copy redtimer, redtimercli and qtredmine
  - xcopy %BUILD%\gui\release\redtimer.exe %DIST%
  - xcopy %BUILD%\cli\release\redtimercli.exe %DIST%
  - xcopy %BUILD%\libqtredmine\release\qtredmine.dll %DIST%
  # Copy Qt libraries
  - xcopy %QTDIR%\bin\libEGL.dll %DIST%
  - xcopy %QTDIR%\bin\libgcc_s_dw2-1.dll %DIST%
  - xcopy %QTDIR%\bin\libGLESv2.dll %DIST%
  - xcopy %QTDIR%\bin\libstdc++-6.dll %DIST%
  - xcopy %QTDIR%\bin\libwinpthread-1.dll %DIST%
  - xcopy %QTDIR%\bin\Qt5Core.dll %DIST%
  - xcopy %QTDIR%\bin\Qt5Gui.dll %DIST%
  - xcopy %QTDIR%\bin\Qt5Network.dll %DIST%
  - xcopy %QTDIR%\bin\Qt5Qml.dll %DIST%
  - xcopy %QTDIR%\bin\Qt5Quick.dll %DIST%
  - xcopy %QTDIR%\bin\Qt5Svg.dll %DIST%
  - xcopy %QTDIR%\bin\Qt5Widgets.dll %DIST%
  # Copy Qt plugins
  - xcopy %QTDIR%\plugins\iconengines\qsvgicon.dll %DIST%\iconengines
  - xcopy %QTDIR%\plugins\imageformats\qsvg.dll %DIST%\imageformats
  - xcopy %QTDIR%\plugins\platforms\qwindows.dll %DIST%\platforms
  # Copy Qt QML modules
  - xcopy %QTDIR%\qml\QtQuick\*.* %DIST%\QtQuick\*.* /s /e /c /y
  - xcopy %QTDIR%\qml\QtQuick.2\*.* %DIST%\QtQuick.2\*.* /s /e /c /y
  # Remove debug DLLs
  - for /f %%i in ('dir /s /b %DIST%\QtQuick\*d.dll') do del %%i
  - for /f %%i in ('dir /s /b %DIST%\QtQuick.2\*d.dll') do del %%i
  # Create and push the archive
  - 7z a -tzip -mx=9 %DEPLOYFILE% %DIST%
  - appveyor PushArtifact %DEPLOYFILE%

artifacts:
  - name: Archive
    path: $(DEPLOYFILE)

deploy:
  - provider: GitHub
    release: $(VERSION)
    auth_token:
      secure: ZUc8vdcr9GvoW987f+m2L364JHu2b1ScdHVGiAFfOrR1fUfafKI6j7rT9MEe/vWG
    artifact: $(DEPLOYFILE)
    on:
      appveyor_repo_tag: true
